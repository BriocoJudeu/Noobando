@echo off & setlocal EnableDelayedExpansion
cls

set lol=League of Legends.exe
 
set bot=ezBot.exe
set botPath=C:\Riot Games\Lobot funcionando\ezBot.exe
 
set loader=EloBuddy.Loader.exe
set loaderPath=C:\Program Files (x86)\EloBuddy\EloBuddy.Loader.exe
 
rem Initialize Array (will take care of multiple LOL Clients)
set "timeRunning=20"
 

title Antidrop by Framawy [1.0.3]
echo Antidrop by Framawy & echo Monitoring...
echo.
 
 
 
:start
:: Check if bot is open
tasklist /nh /fi "imagename eq %bot%" | find /i "%bot%" > nul ^
 || (start /MIN "" "%botPath%") ^
 && (echo !time:~0,8%! - Start !bot!)
call:lowTimeout
 
:: Check if Loader is open
tasklist /nh /fi "imagename eq %loader%" | find /i "%loader%" > nul ^
 || (start /MIN "" "%loaderPath%") ^
 && (echo !time:~0,8%! - Start !loader!)
call:lowTimeout
 
:: Check if bot is responding
tasklist /nh /fi "imagename eq %bot%" /fi "status eq not responding" | find /i "%bot%" > nul ^
 && (taskkill /f /fi "status eq not responding" /im "%bot%" > nul) ^
 && (echo !time:~0,8%! - Kill !bot! - Not Responding)
call:lowTimeout
 
:: Check if Loader is responding
tasklist /nh /fi "imagename eq %loader%" /fi "status eq not responding" | find /i "%loader%" > nul ^
 && (taskkill /f /fi "status eq not responding" /im "%loader%" > nul) ^
 && (echo !time:~0,8%! - Kill !loader! - Not Responding)
call:lowTimeout
    
:: Check if Lol is responding
tasklist /nh /fi "imagename eq %lol%" /fi "memusage lt 120000" /fi "status eq not responding" | find /i "%lol%" > nul ^
 && (taskkill /f /fi "status eq not responding" /im "%lol%" > nul) ^
 && (echo !time:~0,8%! - Kill !lol! - Not Responding) ^
 || tasklist /nh /fi "imagename eq %lol%" /fi "memusage gt 300000" /fi "status eq not responding" | find /i "%lol%" > nul ^
 && (taskkill /f /fi "status eq not responding" /im "%lol%" > nul) ^
 && (echo !time:~0,8%! - Kill !lol! - Not Responding)
call:lowTimeout

REM Check Errors
:: WerFault (VoliBot related)
for /f "tokens=2 delims=," %%a in ('tasklist /v /fo:csv /nh ^| findstr /r /c:"WerFault"') do ^
 taskkill /f /t /pid %%a > nul ^
 && (echo !time:~0,8%! - Werfault Error)
call:lowTimeout
 
:: Failed to Connect / Network Error
for /f "tokens=2,8 delims=," %%a in ('tasklist /v /fo:csv /nh ^| findstr /r /c:"%lol%"') do (
    if not defined timeRunning[%%a] (
        set timeRunning[%%a]=0
    )
    set timeTemp=%%b
    set /a timeTempMin=!timeTemp:~3,2%! * 60
    set /a timeTempSec=!timeTemp:~6,3%!
    set /a timeTemp=!timeTempMin! + !timeTempSec!
    
    set /a diffTime=!timeTemp! - !timeRunning[%%a]!
    
    if !timeRunning[%%a]! EQU !timeTemp! (
        taskkill /f /t /pid %%a > nul ^
         && echo !time:~0,8%! - Kill !lol! PID: %%a - Failed to Connect/Network Error    
    ) else if !diffTime! LSS 3 (
        if !timeTemp! GTR 3 (
            taskkill /f /t /pid %%b > nul ^
             && echo !time:~0,8%! - Kill !lol! PID: %%a - Failed to Connect/Network Error 3s
        )
    )
    set timeRunning[%%a]=!timeTemp!
)
call:freeTimeRunning
call:finalTimeout

goto start
REM pause
 
 
 
REM Clear Array from memory
:freeTimeRunning
for /f "tokens=2 delims=[]" %%i in ('set timeRunning[ 2^>^&1') do (
    if defined timeRunning[%%i] (
        tasklist /nh /fi "PID eq %%~i" | find /i "%lol%" > nul ^
         || set "timeRunning[%%i]="
    )
) > nul
goto:EOF

REM Set timeouts to diminish CPU usage spikes.
:lowTimeout
set /a rand=!random! %% 5 + 1
timeout !rand! > nul
goto:EOF
 
:finalTimeout
set /a rand=!random! %% 25 + 3
timeout !rand! > nul
goto:EOF
 
REM Ends localization of environment changes in a batch file,
 :: and restores environment variables to their values before
 :: the corresponding setlocal command was run.
EndLocal
